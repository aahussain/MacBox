Git Notes:

For Auto login over SSH:
https://help.github.com/articles/generating-ssh-keys#platform-linux
Server-01
$cd ~/.ssh
$ssh-keygen -t rsa -C "your_email@example.com"
$ssh-add ~/.ssh/id_rsa

At server - 02 :
$mkdir .ssh
$chmod 700 .ssh
$cd .ssh; touch authorized_keys; chmod 600 authorized_keys; 
$cat ../Server-01-id_dsa.pub >> authorized_keys

#To log in using your key use the ssh command.
$ssh -1 -v server-01 or ssh -2 -v server-01


http://www.vogella.com/tutorials/Git/article.html
http://gitref.org/ 
http://git-scm.com/doc
http://git-scm.com/book

The following commands enables color highlighting for Git in the console.                                   
git config --global color.ui true
git config --global color.status auto
git config --global color.branch auto

# setup vim as default editor for Git (Linux)
git config --global core.editor vim

#git bash prompt notes  " http://nathanhoad.net/git-bash-tab-completions-and-a-cool-prompt " 

Open up ~/.bash_profile in your favourite editor and paste this in somewhere. You might need to change the location of Git - this one is from my Snow Leopard standard install.

source /usr/local/git/contrib/completion/git-completion.bash

Next up (and still in the same file), add this somewhere:

function parse_git_dirty {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}

export PS1='\n\[\e[36;1m\]\w\[\e[0m\] $(__git_ps1 "[\[\e[0;32m\]%s\[\e[0m\]\[\e[0;33m\]$(parse_git_dirty)\[\e[0m\]]")\n\$ \[\e[0m\]'

